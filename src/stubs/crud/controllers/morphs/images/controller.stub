<?php

namespace {{namespace}}\Http\Controllers\Admin;

use {{namespace}}\Models\{{singularClass}};
use {{namespace}}\Models\{{singularMorphClass}};
use Illuminate\Http\Request;
use {{namespace}}\Http\Controllers\Controller;
use {{namespace}}\Traits\FormBuilderTrait;
use Illuminate\Support\Facades\DB;

class {{singularClass}}Controller extends Controller
{
    use FormBuilderTrait;

    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        ${{pluralSlug}} = {{singularClass}}::last()->get();
        return view('admin.{{pluralSlug}}.index', compact('{{pluralSlug}}'));
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        $form = $this->getForm();
        return view('admin.{{pluralSlug}}.create',compact('form'));
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
       $form = $this->getForm();

       $form->redirectIfNotValid();

       $photos = json_decode($request->get('{{pluralMorphField}}'));

       ${{singularSlug}} = {{singularClass}}::create($request->all());

       // associate {{pluralMorphField}}
       foreach ( $photos as $photo ) {
           ${{singularSlug}}->{{pluralMorphField}}()->create([
               'url' => $photo
           ]);
       }

       flashy('L\' élément a bien été ajouté');
       return redirect()->route('admin.{{singularSlug}}.index');
    }

    /**
     * Display the specified resource.
     *
     * @param  \{{namespace}}\Models\{{singularClass}}  ${{singularSlug}}
     * @return \Illuminate\Http\Response
     */
    public function show({{singularClass}} ${{singularSlug}})
    {
       return view('admin.{{pluralSlug}}.show', compact('{{singularSlug}}'));
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  \{{namespace}}\Models\{{singularClass}}  ${{singularSlug}}
     * @return \Illuminate\Http\Response
     */
    public function edit({{singularClass}} ${{singularSlug}})
    {
        $form = $this->getForm(${{singularSlug}});
        return view('admin.{{pluralSlug}}.edit', compact('{{singularSlug}}','form'));
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \{{namespace}}\Models\{{singularClass}}  ${{singularSlug}}
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, {{singularClass}} ${{singularSlug}})
    {
        $form = $this->getForm(${{singularSlug}});
        $form->redirectIfNotValid();
        ${{singularSlug}}->update($request->all());

        flashy('L\' élément a bien été modifié');
        return redirect()->route('admin.{{singularSlug}}.index');
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \{{namespace}}\Models\{{singularClass}}  ${{singularSlug}}
     * @return \Illuminate\Http\Response
     */
    public function destroy({{singularClass}} ${{singularSlug}})
    {
        DB::transaction(function() use (${{singularSlug}}) {
            ${{pluralMorphField}} = ${{singularSlug}}->{{pluralMorphField}};
            foreach (${{pluralMorphField}} as ${{singularMorphSlug}}) {
                ${{singularMorphSlug}}->delete();
            }
            ${{singularSlug}}->delete();
        });

        ${{singularSlug}}->delete();
        flashy('L\' élément a bien été supprimé');
        return redirect()->route('admin.{{singularSlug}}.index');
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \{{namespace}}\Models\{{singularMorphClass}}  ${{singularMorphSlug}}
     * @return \Illuminate\Http\Response
     */
    public function imageDestroy({{singularMorphClass}} ${{singularMorphSlug}})
    {
       ${{singularMorphSlug}}->delete();
       return response('ok');
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \{{namespace}}\Models\{{singularClass}}  ${{singularSlug}}
     * @return array
     */
    public function imageAdd(Request $request, {{singularClass}} ${{singularSlug}})
    {
       $image = $terrain->{{pluralMorphField}}()->create([
        	'url' =>$request->get('url')
    	 ]);
    	 return [$terrain,$image];
    }



}
