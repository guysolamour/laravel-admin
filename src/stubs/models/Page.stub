<?php

namespace {{namespace}}\{{modelsFolder}};

use {{namespace}}\Traits\SeoableTrait;
use Illuminate\Support\Facades\Route;
use Cviebrock\EloquentSluggable\Sluggable;

class Page extends BaseModel
{
    use Sluggable, SeoableTrait;

    public $timestamps = false;

    /**
     * The attributes that are mass assignable.
     *
     * @var array
     */
    protected $fillable = ['code','name','route','title','description'];



    protected $with = ['metatags'];


    // Attributes
    public function getUriAttribute()
    {
        if (Route::has($this->attributes['route'])) {
            return route($this->attributes['route']);
        }
    }


    public function getTag(string $code, ?string $key = null)
    {

        $tag = $this->metatags->filter(fn ($tag)=> $tag->code == $code)->first();

        if ($tag) {
            return $key ? $tag->$key : $tag;
        }

        return '';
    }

    // add relation methods below

    public function metatags()
    {
       return $this->hasMany(PageMeta::class,'page_id');
    }

    // add sluggable methods below

    public function getRouteKeyName()
    {
        return 'slug';
    }

    /**
     * Return the sluggable configuration array for this model.
     *
     * @return array
     */
    public function sluggable(): array
    {
        return [
            'slug' => ['source' => 'name']
        ];
    }

    public static function booted()
    {
        parent::booted();

        /**
         * @param self $model
         */
        static::created(function ($model) {

            $model->metatags()->create([
                'code'    => 'defaultgroup',
                'name'    => 'Groupe par défaut',
                'title'   => 'Groupe par défaut',
                'type'    =>  PageMeta::TYPES['group']['value'],
            ]);

        });
    }
}
