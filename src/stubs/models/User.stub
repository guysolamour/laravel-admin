<?php

namespace {{namespace}};

use {{namespace}}\Traits\CommenterTrait;
use {{namespace}}\Traits\MediaableTrait;
use Illuminate\Notifications\Notifiable;
use Spatie\MediaLibrary\HasMedia;
use Illuminate\Contracts\Auth\MustVerifyEmail;
use Illuminate\Foundation\Auth\User as Authenticatable;

class User extends Authenticatable implements MustVerifyEmail, HasMedia
{
    use Notifiable, CommenterTrait, MediaableTrait;

    /**
     * The attributes that are mass assignable.
     *
     * @var array
     */
    protected $fillable = [
        'pseudo', 'name', 'email', 'password',
    ];

    /**
     * The attributes that should be hidden for arrays.
     *
     * @var array
     */
    protected $hidden = [
        'password', 'remember_token',
    ];

    /**
     * The attributes that should be cast to native types.
     *
     * @var array
     */
    protected $casts = [
        'email_verified_at' => 'datetime',
    ];

    /**
    * @param string $email
    *
    * @return \Illuminate\Database\Eloquent\Model|null|static
    */
    public static function findByEmail($email)
    {
      return static::where('email', $email)->first();
    }

    public function getMediaCollections(): array
    {
        return config('media-library.collections', []);
    }


    public function getMediaConversions(): array
    {
        return config('media-library.conversions', []);
    }
    // add relation methods below
}
