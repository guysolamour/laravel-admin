<?php

namespace {{namespace}}\{{modelsFolder}};

use {{namespace}}\Traits\DraftableTrait;
use {{namespace}}\Traits\MediaableTrait;
use Illuminate\Database\Eloquent\Model;
use Spatie\MediaLibrary\HasMedia;
use GeneaLabs\LaravelModelCaching\Traits\Cachable;

abstract class BaseModel extends Model implements HasMedia
{

   //  use Cachable;
   use DraftableTrait, MediaableTrait;

    /**
     * Get the lasts items ordered by id DESC
     * @param $query
     * @param int $limit
     * @return
     */
    public function scopeLast($query, int $limit = null)
    {
        if (is_null($limit)) {
            return $query->orderByDesc('id');
        }
        return $query->limit($limit)->orderByDesc('id');
    }


    /**
     * Get elemet by Id
     *
     * @param \Illuminate\Database\Eloquent\Builder $query
     * @param string $slug
     * @return \Illuminate\Database\Eloquent\Builder
     */
    public function scopeFindBySlug($query, string $slug)
    {
        return $query->where('slug',$slug);
    }



    public function getMediaCollections() :array
    {
        return config('media-library.collections', []);
    }


    public function getMediaConversions() :array
    {
        return config('media-library.conversions', []);
    }


    /**
     * Get elements by slug
     *
     * @param \Illuminate\Database\Eloquent\Builder $query
     * @param array $slugs
     * @return \Illuminate\Database\Eloquent\Builder
     */
    public function scopeFindAllBySlug($query, array $slugs)
    {
        return $query->whereIn('slug', $slugs);
    }

    /**
     * Guest form name
     *
     * @return string
     */
    public function getFormNameAttribute() :string
    {
        return get_form_name($this);
    }

     /**
     * Get formated date
     *
     * @return string
     */
    public function getFormatedDateAttribute() :string
    {
        return $this->created_at->format('d/m/Y h:i');
    }

}
