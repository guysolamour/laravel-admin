<?php

namespace {{namespace}}\Http\Controllers\{{backNamespace}}\{{extensionsFolderClass}}\{{extensionClass}};

use Illuminate\Http\Request;
use {{namespace}}\{{modelsFolder}}\{{extensionsFolderClass}}\{{extensionClass}}\Post;
use {{namespace}}\Traits\FormBuilderTrait;
use {{namespace}}\Http\Controllers\Controller;
use {{namespace}}\Forms\{{backNamespace}}\{{extensionsFolderClass}}\{{extensionClass}}\PostForm;


class PostController extends Controller
{
    use FormBuilderTrait;

    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        $posts = Post::with('categories')->last()->get();
        $form = $this->getForm(new Post, PostForm::class);

        return view('{{backLowerNamespace}}.{{extensionsFolder}}.{{extensionSingularSlug}}.posts.index', compact('posts','form'));
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        $form = $this->getForm(new Post, PostForm::class);

        return view('{{backLowerNamespace}}.{{extensionsFolder}}.{{extensionSingularSlug}}.posts.create', compact('form'));
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        $form = $this->getForm(new Post, PostForm::class);

        $form->redirectIfNotValid();

        $post = Post::create($request->all());
        $post->generateSeo();

        flashy('L\' élément a bien été ajouté');
        return redirect()->route('{{backLowerNamespace}}.{{extensionsFolder}}.{{extensionSingularSlug}}.post.index');
    }

    /**
     * Display the specified resource.
     *
     * @param  \{{namespace}}\{{modelsFolder}}\{{extensionsFolderClass}}\{{extensionClass}}\Post  $post
     * @return \Illuminate\Http\Response
     */
    public function show(Post $post)
    {
        return view('{{backLowerNamespace}}.{{extensionsFolder}}.{{extensionSingularSlug}}.posts.show', compact('post'));
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  \{{namespace}}\{{modelsFolder}}\{{extensionsFolderClass}}\{{extensionClass}}\Post  $post
     * @return \Illuminate\Http\Response
     */
    public function edit(Post $post)
    {
        $form = $this->getForm($post, PostForm::class);

        return view('{{backLowerNamespace}}.{{extensionsFolder}}.{{extensionSingularSlug}}.posts.edit', compact('post', 'form'));
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \{{namespace}}\{{modelsFolder}}\{{extensionsFolderClass}}\{{extensionClass}}\Post  $post
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, Post $post)
    {
        $form = $this->getForm($post, PostForm::class);
        $form->redirectIfNotValid();

        $post->update($request->all());
        $post->generateSeo();

        flashy('L\' élément a bien été modifié');

        return redirect()->route('{{backLowerNamespace}}.{{extensionsFolder}}.{{extensionSingularSlug}}.post.index');
    }


    /**
     * Remove the specified resource from storage.
     *
     * @param  \{{namespace}}\{{modelsFolder}}\{{extensionsFolderClass}}\{{extensionClass}}\Post  $post
     * @return \Illuminate\Http\Response
     */
    public function destroy(Post $post)
    {
        $post->delete();
        flashy('L\' élément a bien été supprimé');

        return back();
    }

}
