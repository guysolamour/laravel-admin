@extends('{{backLowerNamespace}}.layouts.base')

@section('title', $page->name)



@section('content')
<div class="main-content">
    <div class="card ">
        <nav aria-label="breadcrumb" class="d-flex justify-content-end" style="padding-top:10px;padding-right:20px;">
            <ol class="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="{{ route('{{singularSlug}}.dashboard') }}">Tableau de bord</a></li>
                    <li class="breadcrumb-item"><a href="{{ route('{{backLowerNamespace}}.page.index') }}">Pages</a></li>
                    <li class="breadcrumb-item active">{{ $page->name }}</li>
                </ol>
            </ol>
        </nav>

    </div>

    <div class="card">
        {{-- <h4 class="card-title">
                Pages
            </h4> --}}

        <div class="card-body">
            <div class='row'>
                <div class='col-md-12'>
                    <div class="card">
                        <div class="card-header">
                            <h3 class="card-title">Page: {{ $page->name }}</h3>
                            <div class="btn-group float-right">
                                @include('{{backLowerNamespace}}.pages._addmetataform')
                                <a class="btn btn-info" href="{{ route('{{backLowerNamespace}}.page.edit', $page) }}">
                                    <i class="fas fa-edit"></i> Modifier la page</a>
                            </div>
                        </div>


                        <div class="card-body row">
                            <div class="col-md-12">
                                <div class="row">
                                    <div class="col-md-6">
                                        <p><span class="font-weight-bold">Nom:</span></p>
                                        <p>
                                            {{ $page->name }}
                                        </p>
                                    </div>
                                    <div class="col-md-6">
                                        <p><span class="font-weight-bold">Route:</span></p>
                                        <p>
                                            {{ $page->route }}
                                        </p>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <p><span class="font-weight-bold">Route:</span></p>
                                        <p class="pb-2 "><b>Url: </b><a href="{{ $page->uri }}" class="text-primary"
                                                target="_blank">{{ $page->uri }}</a>
                                        </p>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
                <div class="row" style="width: 100%">
                    @foreach($page->metatags->reverse() as $meta)
                    <div class="col-12">
                        <div class="card">
                            <div class="card-header">
                                <h3 class="card-title">
                                    {{ $meta->name }}
                                    @if(get_{{singularSlug}}()->isConceptor{{singularClass}}())
                                    | {{ $meta->code }}
                                    @endif
                                </h3>
                                <div class="btn-group float-right">

                                    <button class="btn btn-info" data-toggle="modal" data-target="#editMetaModal{{ $meta->id }}">
                                        <i class="fas fa-edit"></i> Modifier</button>
                                    @if (get_{{singularSlug}}()->isConceptor{{singularClass}}())
                                    <a href="{{ route('{{backLowerNamespace}}.pagemeta.destroy',[$page, $meta]) }}" data-method="delete"
                                        data-confirm="Etes vous sûr de bien vouloir procéder à la suppression ?" class="btn btn-danger"
                                        data-toggle="tooltip" data-placement="top" title="Supprimer"><i class="fas fa-trash"></i> Supprimer</a>
                                    @endif
                                </div>
                            </div>


                            <div class="card-body row">
                                <div class="col-md-12">
                                    <h5>{{ $meta->title }}</h5>
                                    <p>
                                        @if ($meta->isImage())
                                        <img src="{{ $meta->image_url }}" alt="{{ $meta->name }}" class="img-fluid img-thumbnail" style="height: 300px">
                                        @elseif($meta->isVideo())
                                        <div class="embed-responsive embed-responsive-16by9" style="display: {{ $meta->isVideo() ? 'block' : 'none' }}"">
                                            <iframe class=" embed-responsive-item" src="{{$meta->video_url }}" allowfullscreen></iframe>
                                        </div>
                                        @else
                                        {!! $meta->content !!}
                                        @endif
                                    </p>
                                </div>

                            </div>
                            @include('{{backLowerNamespace}}.pages._updatemetaform', ['meta' => $meta])
                        </div>
                    </div>
                    @endforeach
                </div>
            </div>
        </div>
    </div>
    @if(get_{{singularSlug}}()->isConceptor{{singularClass}}())
    <div class="fab fab-fixed">
        <button class="btn btn-float btn-primary" data-toggle="button">
            <i class="fab-icon-default ti-plus"></i>
            <i class="fab-icon-active ti-close"></i>
        </button>

        <ul class="fab-buttons">

            <li><a class="btn btn-float btn-sm btn-danger" href="{{ route('{{backLowerNamespace}}.page.destroy',$page) }}"
                    data-method="delete" data-confirm="Etes vous sûr de bien vouloir procéder à la suppression ?"
                    title="" data-provide="tooltip" data-placement="left" data-original-title="Supprimer"><i
                        class="ti-trash"></i> </a></li>

        </ul>
    </div>
    @endif
</div>


@include('{{backLowerNamespace}}.partials._tinymce', [
    'selector' => "form textarea[data-tinymce]",
    'model' => $page->getModel(),
    'model_name' => get_class($page->getModel()),
    'prefix' => config('administrable.auth_prefix_path')
])

@endsection
@push('js')
<script>
    class PageMeta
       {
        static init (){
            $('form[name=addPageMeta]').each((index,form) => new PageMeta($(form)))
        }

        constructor(form){
            this.binds()

            this.form = form

            this.selectField = this.form.find('select[name=type]')
            this.textareaField = this.form.find('textarea[name=textcontent]')
            this.simpletextareaField = this.form.find('textarea[name=simpletextcontent]')
            this.imageField = this.form.find('input[name=imagecontent]')
            this.videoField = this.form.find('input[name=videocontent]')
            this.thumbnail = this.form.find('.thumbnail')
            this.types = @json(\{{namespace}}\{{modelsFolder}}\PageMeta::TYPES) // render by blade

            this.currentType = 'text'

            this.addEvents()

        }

        binds() {
            const methods = [
                'addEvents', 'handleChange', 'showImageField', 'showTextField', 'showVideoField',
                'validateFile', 'handleSubmit', 'handleImage', 'handleVideo'
            ]

            methods.forEach((fn) => this[fn] = this[fn].bind(this))
        }

        addEvents(){
            this.selectField.on('change', this.handleChange)
            this.form.on('submit', this.handleSubmit)
            this.imageField.on('change', this.handleImage)
            this.videoField.on('blur', this.handleVideo)
        }

        handleSubmit(event){

            if (this.currentType === 'image'){
                if (!this.thumbnail.find('img').attr('src')){
                    alert("Ce type d'image n'est pas autorisé.")
                    return false
                }
            }

            if(this.currentType === 'video'){
                if (!this.thumbnail.find('div').find('iframe').attr('src')){
                    alert("Ce type de vidéo n'est pas autorisé.")
                    return false
                }
            }

            if (!this.form.find('input[name=code]').val()){
                alert("Le champ code est obligatoire.")
                return false
            }
        }

        handleChange(event){
            const value = event.target.value

            if (value == this.types.text.value) {
                this.showTextField()
            }
            else if (value == this.types.image.value) {
                this.showImageField()
            }
            else if (value == this.types.video.value) {
                this.showVideoField()
            }
            else if (value == this.types.simpletext.value) {
                this.showSimpleTextField()
            }


        }

        showImageField(){
            this.currentType = 'image'
            this.textareaField.attr('disabled', true).parents('.form-group').hide()
            this.simpletextareaField.attr('disabled', true).parents('.form-group').hide()
            this.videoField.attr('disabled', true).parents('.form-group').hide()
            this.imageField.attr('disabled', false).parents('.form-group').show()
        }

        handleImage(){
            const reader = new FileReader()
            const image = event.target.files[0]

            if (!this.validateFile(image)) {
                this.thumbnail.find('img').attr('src', '').hide()
                return
            }

            reader.readAsDataURL(image)

            reader.onload = (event) => {
                this.thumbnail.find('div').hide()
                this.thumbnail.find('img').attr('src', event.target.result).show()
            }
        }

        validateFile(image) {

            const ext = image.name.substring(image.name.lastIndexOf('.') + 1).toLowerCase()

            if (['png', 'jpg', 'gif', 'jpeg', 'svg'].includes(ext)) {
                return true
            } else {
                alert("Erreur lors du traitement de l'image `" + image.name + '`. Veuillez choisir une image de type (jpg, jpeg, png,svg).',)
                // swal({
                //     title: 'Ajout de média !',
                //     text: "Erreur lors du traitement de l'image `" + image.name + '`. Veuillez choisir une image de type (jpg, jpeg, png,svg).',
                //     icon: 'error'
                // })
                return false
            }
        }

        validURL(str) {
            try {
                new URL(str);
                return true;
            } catch (_) {
                return false;
            }
        }

        showTextField(){
            this.currentType = 'text'
            this.videoField.attr('disabled', true).parents('.form-group').hide()
            this.imageField.attr('disabled', true).parents('.form-group').hide()
            this.simpletextareaField.attr('disabled', true).parents('.form-group').hide()
            this.thumbnail.find('div').hide()
            this.thumbnail.find('img').hide()
            this.textareaField.attr('disabled', false).parents('.form-group').show()


        }

        showSimpleTextField(){
            this.currentType = 'simpletext'
            this.videoField.attr('disabled', true).parents('.form-group').hide()
            this.imageField.attr('disabled', true).parents('.form-group').hide()
            this.textareaField.attr('disabled', true).parents('.form-group').hide()
            this.thumbnail.find('div').hide()
            this.thumbnail.find('img').hide()
            this.simpletextareaField.attr('disabled', false).parents('.form-group').show()
        }

        showVideoField(){
            this.currentType = 'video'
            this.imageField.attr('disabled', true).parents('.form-group').hide()
            this.textareaField.attr('disabled', true).parents('.form-group').hide()
            this.simpletextareaField.attr('disabled', true).parents('.form-group').hide()
            this.videoField.attr('disabled', false).parents('.form-group').show()
            this.thumbnail.find('div').show()
            this.thumbnail.find('img').hide()
        }

        handleVideo() {
            if(!this.validURL(event.target.value)) {
                this.thumbnail.find('div').find('iframe').attr('src','')
                alert("Le lien de la vidéo n'est pas valide")
                return
            }
            this.thumbnail.find('img').hide()
            this.thumbnail.find('div').find('iframe').attr('src', event.target.value).show()
        }

    }

    PageMeta.init();

</script>
@endpush
