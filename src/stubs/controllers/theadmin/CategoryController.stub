<?php

namespace {{namespace}}\Http\Controllers\{{backNamespace}};

use Illuminate\Http\Request;
use {{namespace}}\Traits\FormBuilderTrait;
use {{namespace}}\{{modelsFolder}}\Category;
use {{namespace}}\Http\Controllers\Controller;

class CategoryController extends Controller
{
    use FormBuilderTrait;

    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        $categories = Category::last()->get();
        $form = $this->getForm();

        return view('{{backLowerNamespace}}.categories.index', compact('categories','form'));
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        $form = $this->getForm();
        return view('{{backLowerNamespace}}.categories.create', compact('form'));
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        $form = $this->getForm();

        $form->redirectIfNotValid();

        Category::create($request->all());

        flashy('L\' élément a bien été ajouté');
        return redirect()->route('{{backLowerNamespace}}.category.index');
    }

    /**
     * Display the specified resource.
     *
     * @param  \{{namespace}}\{{modelsFolder}}\Category  $category
     * @return \Illuminate\Http\Response
     */
    public function show(Category $category)
    {
        return view('{{backLowerNamespace}}.categories.show', compact('category'));
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  \{{namespace}}\{{modelsFolder}}\Category  $category
     * @return \Illuminate\Http\Response
     */
    public function edit(Category $category)
    {
        $form = $this->getForm($category);
        return view('{{backLowerNamespace}}.categories.edit', compact('category', 'form'));
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \{{namespace}}\{{modelsFolder}}\Category  $category
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, Category $category)
    {
        $form = $this->getForm($category);
        $form->redirectIfNotValid();
        $category->update($request->all());

        flashy('L\' élément a bien été modifié');
        return redirect()->route('{{backLowerNamespace}}.category.index');
    }


    /**
     * Remove the specified resource from storage.
     *
     * @param  \{{namespace}}\{{modelsFolder}}\Category  $category
     * @return \Illuminate\Http\Response
     */
    public function destroy(Category $category)
    {
        $category->delete();
        flashy('L\' élément a bien été supprimé');
        return redirect()->route('{{backLowerNamespace}}.category.index');
    }

}
