<?php

namespace {{namespace}}\Http\Controllers\{{backNamespace}};

use Illuminate\Http\Request;
use {{namespace}}\{{modelsFolder}}\Comment;
use {{namespace}}\{{modelsFolder}}\Mailbox;
use Illuminate\Support\Facades\Mail;
use {{namespace}}\Mail\{{backNamespace}}\NoteAnswerMail;
use {{namespace}}\Http\Controllers\Controller;

class MailboxController extends Controller
{

      /**
       * Display a listing of the resource.
       *
       * @return \Illuminate\Http\Response
       */
      public function index()
      {
          $mailboxes = Mailbox::last()->get();

          $unread = Mailbox::unRead()->count();

          return view('{{backLowerNamespace}}.mailboxes.index', compact('mailboxes','unread'));
      }



      /**
       * Display the specified resource.
       *
       * @param  \{{namespace}}\{{modelsFolder}}\Mailbox  $mailbox
       * @return \Illuminate\Http\Response
       */
      public function show(Mailbox $mailbox)
      {
          // mark the message as read if unread
          $mailbox->markAsRead();

          return view('{{backLowerNamespace}}.mailboxes.show', compact('mailbox'));
      }




      /**
       * Remove the specified resource from storage.
       *
       * @param  \{{namespace}}\{{modelsFolder}}\Mailbox  $mailbox
       * @return \Illuminate\Http\Response
       */
      public function destroy(Mailbox $mailbox)
      {
          $mailbox->delete();
          flashy('L\' élément a bien été supprimé');
          return redirect()->route('{{backLowerNamespace}}.mailbox.index');
      }

      public function saveNote(Mailbox $mailbox, Request $request)
      {
        $request->validate([
            'comment' => 'required|min:10',
            'color'  => 'required',
            'email'   => 'required_if:save,0',
            'subject' => 'required_if:save,0',
        ], [
            'comment.required'   => 'La note ne peut pas être vide',
            'email.required_if'  => "L'email est obligatoire et doit être valide pour envoyer un email",
            'subject.required_if' => "Le sujet est obligatoire et doit être valide pour envoyer un email",
        ]);

        $note = new Comment;
        $note->commenter()->associate(get_{{singularSlug}}());
        $note->commentable()->associate($mailbox);
        $note->comment = $request->get('comment');
        $note->guest_name = $request->get('color');
        $note->reply_notification = false;

        $note->save();


        // send email
        if ($request->get('save') == 0 && $request->get('email') && $request->get('subject')) {
            Mail::to($request->get('email'))->send(new NoteAnswerMail($request->get('subject'), $note));
        }

        flashy('La note a bien été ajoutée pour ce message');
        return back();
    }


    public function updateNote(Mailbox $mailbox, Comment $comment, Request $request)
    {
        $request->validate([
            'comment' => 'required|min:10',
            'color'   => 'required',
        ], [
            'content.required'   => 'La note ne peut pas être vide',
            'color.required'     => "La couleur est obligatoire",
        ]);

        $comment->update([
            'comment'       => $request->get('comment'),
            'guest_name'    => $request->get('color'),
        ]);

        flashy('La note a bien été modifiée');
        return back();
    }

    public function deleteNote(Mailbox $mailbox, Comment $comment)
    {
        $comment->delete();
        flashy('La note a bien été supprimée');
        return back();
    }
}
